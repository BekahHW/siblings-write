name: PostHog Session Analysis with Continue CLI Agent

on:
  schedule: 
  - cron: "0 6 * * *" # Run at 6 AM UTC daily
  workflow_dispatch: # Allow manual triggering

jobs:
  analyze:
    runs-on: ubuntu-latest

    permissions:
        contents: read
        issues: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "20"

    - name: Install Continue CLI
      run: |
        echo "Installing Continue CLI..."
        npm install -g @continuedev/cli
        echo "Installation completed"
    
    - name: Debug - Verify CLI installation
      env:
        CONTINUE_API_KEY: ${{ secrets.CONTINUE_API_KEY }}
      run: |
        echo "Checking if cn command is available..."
        which cn || echo "cn command not found in PATH"
        echo "Checking npm global packages..."
        npm list -g --depth=0 | grep continue || echo "Continue CLI not found in global packages"
        echo "Trying to run cn --version..."
        cn --version || echo "Failed to run cn --version"
    
    - name: Debug - Test CLI help
      env:
        CONTINUE_API_KEY: ${{ secrets.CONTINUE_API_KEY }}
      run: |
        echo "Testing cn --help..."
        cn --help || echo "Failed to run cn --help"
    
    - name: Test Continue CLI Basic Connection
      env:
        CONTINUE_API_KEY: ${{ secrets.CONTINUE_API_KEY }}
      run: |
        echo "üîç Testing basic Continue CLI functionality..."
        echo "Timeout set to 30 seconds for this test"
        timeout 30s cn --help || echo "‚ùå CLI help command timed out or failed"
        echo "‚úÖ Basic CLI test completed"
    
    - name: Test PostHog Config Access
      env:
        CONTINUE_API_KEY: ${{ secrets.CONTINUE_API_KEY }}
      run: |
        echo "üîç Testing PostHog config access..."
        echo "Attempting to load config: continuedev/awesome-models-posthog-gh"
        timeout 60s cn --config continuedev/awesome-models-posthog-gh -p "Hello, can you confirm PostHog access?" || echo "‚ùå PostHog config test timed out or failed"
        echo "‚úÖ PostHog config test completed"
    
    - name: Run PostHog Analysis Only
      env:
        CONTINUE_API_KEY: ${{ secrets.CONTINUE_API_KEY }}
      run: |
        echo "üìä Starting PostHog analysis (without GitHub issue creation)..."
        echo "Timeout set to 5 minutes for analysis"
        timeout 300s cn --config continuedev/awesome-models-posthog-gh -p "Analyze recent PostHog sessions and summarize UX issues. Do NOT create GitHub issues - just provide analysis." || echo "‚ùå PostHog analysis timed out or failed"
        echo "‚úÖ PostHog analysis step completed"
    
    - name: Create GitHub Issues (Separate Step)
      env:
        CONTINUE_API_KEY: ${{ secrets.CONTINUE_API_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "üêõ Creating GitHub issues based on analysis..."
        echo "Timeout set to 3 minutes for issue creation"
        timeout 180s cn --config continuedev/awesome-models-posthog-gh -p "Based on previous PostHog analysis, create GitHub issues for the top 3 UX problems found. Use the GITHUB_TOKEN to create actual issues." || echo "‚ùå GitHub issue creation timed out or failed"
        echo "‚úÖ GitHub issue creation completed"
    
    
    - name: Debug - Post-execution info
      if: always()  # Run even if previous steps fail
      run: |
        echo "üìã Workflow execution summary:"
        echo "- Basic CLI test: Check logs above"
        echo "- PostHog config test: Check logs above"
        echo "- PostHog analysis: Check logs above"
        echo "- GitHub issue creation: Check logs above"
        echo "üîç Look for ‚úÖ or ‚ùå indicators in each step"
        echo "‚è±Ô∏è All steps have timeouts to prevent hanging"

    - name: Summary
      run: |
        echo "‚úÖ PostHog analysis workflow completed!"
        echo "üìä Check the artifacts for detailed analysis results"
        echo "üêõ Check your repository issues for newly created UX issues"
        echo "ü§ñ Agent automatically handled both analysis and issue creation"
