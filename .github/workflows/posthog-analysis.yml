name: PostHog Session Analysis with Continue CLI Agent

on:
  schedule: 
  - cron: "0 6 * * *" # Run at 6 AM UTC daily
  workflow_dispatch: # Allow manual triggering

jobs:
  analyze:
    runs-on: ubuntu-latest

    permissions:
        contents: read
        issues: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "20"

    - name: Install Continue CLI
      run: |
        echo "Installing Continue CLI..."
        npm install -g @continuedev/cli
        echo "Installation completed"

    - name: Test PostHog Connection  - 1
      env:
        CONTINUE_API_KEY: ${{ secrets.CONTINUE_API_KEY }}
      run: |
        echo "🔌 Step 3: Testing PostHog API connection"
        echo "=================================="
        timeout 90s cn --config continuedev/awesome-models-posthog-gh "whoami"
        echo "=================================="
            
    - name: Test PostHog Connection
      env:
        CONTINUE_API_KEY: ${{ secrets.CONTINUE_API_KEY }}
      run: |
        echo "🔌 Step 3: Testing PostHog API connection"
        echo "Testing PostHog query with cn"

        # Run the command and capture exit code - using the same prompt that works in TUI
        timeout 240s cn --config continuedev/awesome-models-posthog-gh -p "Using the MCP and my prompts, tell me about my posthog recording sessions data" 
    
    - name: Create GitHub Issues from Analysis
      env:
        CONTINUE_API_KEY: ${{ secrets.CONTINUE_API_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "🐛 Step 4: Creating GitHub issues from PostHog analysis"
        echo "Using previous analysis to create issues (60s timeout)"
        
        if timeout 60s cn --config continuedev/awesome-models-posthog-gh -p "Based on the PostHog analysis you just performed, create GitHub issues for the top 3 UX problems you identified. Use the gh CLI to create the issues in this repository. Execute: gh issue create --title '[Title]' --body '[Details]' --label 'automated'" > github_issues.md 2>github_error.log; then
          echo "✅ GitHub issue creation SUCCESS"
          echo "=================================="
          echo "GitHub Issues Created:"
          cat github_issues.md
          echo "=================================="
        else
          echo "❌ GitHub issue creation FAILED"
          echo "Error log:"
          cat github_error.log
        fi
      
    
    - name: Debug - Post-execution info
      if: always()  # Run even if previous steps fail
      run: |
        echo "📋 Detailed workflow execution summary:"
        echo "Step 1 - Agent Configuration: Check logs above"
        echo "Step 2 - PostHog Agent Config: Check logs above"
        echo "Step 3 - PostHog Connection: Check logs above"
        echo "Step 4 - PostHog Data Access: Check logs above"
        echo "Step 5 - Session Recording Access: Check logs above"
        echo "Step 6 - Limited Analysis: Check logs above"
        echo "Step 7 - GitHub Issues: Check logs above"
        echo ""
        echo "🔍 Look for ✅ or ❌ indicators in each step"
        echo "⏱️ All steps have short timeouts to identify hang points"
        echo "🎯 This will help identify exactly where the connection fails"

    - name: Summary
      run: |
        echo "✅ PostHog analysis workflow completed!"
        echo "📊 Check the artifacts for detailed analysis results"
        echo "🐛 Check your repository issues for newly created UX issues"
        echo "🤖 Agent automatically handled both analysis and issue creation"

