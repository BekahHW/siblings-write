name: PostHog Session Analysis with Continue CLI Agent

on:
  schedule: 
  - cron: "0 6 * * *" # Run at 6 AM UTC daily
  workflow_dispatch: # Allow manual triggering

jobs:
  analyze:
    runs-on: ubuntu-latest

    permissions:
        contents: read
        issues: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "20"

    - name: Install Continue CLI
      run: |
        echo "Installing Continue CLI..."
        npm install -g @continuedev/cli
        echo "Installation completed"
        
    - name: Test PostHog Connection
      env:
        CONTINUE_API_KEY: ${{ secrets.CONTINUE_API_KEY }}
      run: |
        echo "üîå Step 3: Testing PostHog API connection"
        echo "Attempting to verify PostHog connectivity (30s timeout)"
        timeout 30s cn --config continuedev/awesome-models-posthog-gh -p "Can you connect to PostHog? Please test the connection and report the status." || echo "‚ùå PostHog connection test failed"
        echo "‚úÖ PostHog connection test completed"
        
    - name: Test PostHog Data Access
      env:
        CONTINUE_API_KEY: ${{ secrets.CONTINUE_API_KEY }}
      run: |
        echo "üìä Step 4: Testing PostHog data access"
        echo "Checking if agent can access session recordings (45s timeout)"
        timeout 45s cn --config continuedev/awesome-models-posthog-gh -p "Can you access PostHog session recordings? Please check and list available data types (no analysis yet, just verify access)." || echo "‚ùå PostHog data access test failed"
        echo "‚úÖ PostHog data access test completed"
        
    - name: Test Session Recording Access
      env:
        CONTINUE_API_KEY: ${{ secrets.CONTINUE_API_KEY }}
      run: |
        echo "üé¨ Step 5: Testing session recording access specifically"
        echo "Verifying access to session recordings data (60s timeout)"
        timeout 60s cn --config continuedev/awesome-models-posthog-gh -p "Please verify you can access session recordings. How many sessions can you see? What date range? (Just verification, no full analysis)." || echo "‚ùå Session recording access test failed"
        echo "‚úÖ Session recording access test completed"
    
    - name: Run Limited PostHog Analysis
      env:
        CONTINUE_API_KEY: ${{ secrets.CONTINUE_API_KEY }}
      run: |
        echo "üîç Step 6: Running limited PostHog analysis"
        echo "Analyzing just 5 recent sessions (2 minute timeout)"
        timeout 120s cn --config continuedev/awesome-models-posthog-gh -p "Please analyze the 5 most recent PostHog sessions. Identify any obvious UX issues. Keep the analysis brief. Do NOT create GitHub issues." || echo "‚ùå Limited PostHog analysis failed"
        echo "‚úÖ Limited PostHog analysis completed"
    
    - name: Create GitHub Issues (Only if previous steps work)
      env:
        CONTINUE_API_KEY: ${{ secrets.CONTINUE_API_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "üêõ Step 7: Creating GitHub issues based on analysis"
        echo "This step only runs if data access worked (90s timeout)"
        timeout 90s cn --config continuedev/awesome-models-posthog-gh -p "Based on the previous limited analysis, create 1 GitHub issue for the most critical UX problem found. Use the GITHUB_TOKEN." || echo "‚ùå GitHub issue creation failed"
        echo "‚úÖ GitHub issue creation completed"
    
    
    - name: Debug - Post-execution info
      if: always()  # Run even if previous steps fail
      run: |
        echo "üìã Detailed workflow execution summary:"
        echo "Step 1 - Agent Configuration: Check logs above"
        echo "Step 2 - PostHog Agent Config: Check logs above"
        echo "Step 3 - PostHog Connection: Check logs above"
        echo "Step 4 - PostHog Data Access: Check logs above"
        echo "Step 5 - Session Recording Access: Check logs above"
        echo "Step 6 - Limited Analysis: Check logs above"
        echo "Step 7 - GitHub Issues: Check logs above"
        echo ""
        echo "üîç Look for ‚úÖ or ‚ùå indicators in each step"
        echo "‚è±Ô∏è All steps have short timeouts to identify hang points"
        echo "üéØ This will help identify exactly where the connection fails"

    - name: Summary
      run: |
        echo "‚úÖ PostHog analysis workflow completed!"
        echo "üìä Check the artifacts for detailed analysis results"
        echo "üêõ Check your repository issues for newly created UX issues"
        echo "ü§ñ Agent automatically handled both analysis and issue creation"
