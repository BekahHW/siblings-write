---
import PostHogLayout from '../layouts/PostHogLayout.astro';
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

const title = 'Siblings Write';
const description = 'The Hawrot Siblings Writing Blog.';
const permalink = Astro.site.href;
// Get all blog posts and sort by date (descending)
const allPosts = await getCollection('blog', ({ data }) => data.hidden !== true);
const latestPosts = allPosts
  .sort((a, b) => {
    return new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime();
  })
  .slice(0, 3); // Show latest 3 posts
const authorEntries = await getCollection('authors');
const getAuthorName = (authorId) => {
  const author = authorEntries.find(a => a.id === authorId);
  return author ? author.data.name : authorId; // Fallback to ID if author not found
};
---

<PostHogLayout>
  <BaseLayout title={title} description={description} permalink={permalink}>
    <div class="home-container">
      <div class="home-copy">
        <h1>The Hawrot Siblings</h1>
        <div class="about-content">
          <h2>Stories from the Siblings Who Never Outgrew Wonder</h2>
          <p>Josh, Bekah, and Zach grew up chasing fireflies and building snow forts in Steubenville, Ohio. Now weâ€™re raising kids of our own (13 total!) and writing stories that capture the magic of our childhood.</p>
          
          <!-- Newsletter Form Integrated -->
          <div class="newsletter-callout">
            <p class="newsletter-intro">Stay updated with our latest stories:</p>
            <form 
              action="https://app.kit.com/forms/7612128/subscriptions" 
              class="seva-form formkit-form newsletter-form-inline" 
              method="post" 
              data-sv-form="7612128" 
              data-uid="775bb3f6cc" 
              data-format="inline"
              data-version="5"
              data-options='{"settings":{"after_subscribe":{"action":"message","success_message":"Success! Now check your email to confirm your subscription.","redirect_url":""},"analytics":{"google":null,"fathom":null,"facebook":null,"segment":null,"pinterest":null,"sparkloop":null,"googletagmanager":null},"powered_by":{"show":false},"recaptcha":{"enabled":true}},"version":"5"}'
            >
              <ul class="formkit-alert formkit-alert-error" data-element="errors" data-group="alert"></ul>
              <div data-element="fields" class="seva-fields formkit-fields newsletter-fields-inline">
                <div class="formkit-field">
                  <input 
                    class="formkit-input newsletter-input-inline" 
                    name="email_address" 
                    placeholder="your@email.com" 
                    required 
                    type="email"
                    aria-label="Email Address"
                  >
                </div>
                <button 
                  data-element="submit"
                  class="formkit-submit newsletter-submit-inline"
                  type="submit"
                >
                  <div class="formkit-spinner"><div></div><div></div><div></div></div>
                  <span>Join Us</span>
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>

      <div class="hero-image-container">
        <picture>
          <source srcset="/assets/Hawrot-Siblings.png" media="(min-width: 600px)">
          <img class="hero-image" alt="the Hawrot Siblings" src="/assets/Hawrot-Siblings.png" width="550" height="466">
        </picture>
      </div>
    </div>



    <section class="latest-section-wrapper">
      <h2 class="section-title">Latest Works</h2>
      <hr/>
      <ul class="post-list">
        {latestPosts.map((post, index) => (
          <li class="post-item" style={`animation-delay: ${index * 0.2}s`}>
            <a href={`/blog/${post.id}/`} class="post-link">
              <div class="post-content">
                <h3>{post.data.title}</h3>
                <div class="post-meta">
                  <span class="post-item-author">
                    By <a href={`/authors/${post.data.author.id}`}>{getAuthorName(post.data.author.id)}</a> | 
                  </span>
                  <span class="post-date">
                    {new Date(post.data.publishDate).toLocaleDateString(undefined, {
                      year: 'numeric', month: 'short', day: 'numeric'
                    })}
                  </span>
                </div>
                <p class="post-description">{post.data.description}</p>
                <p class="read-more"><a href={`/blog/${post.id}/`}>Read more â†’</a></p>
              </div>
            </a>
          </li>
        ))}
      </ul>
    </section>
    
    <!-- Success Modal -->
    <div id="success-modal" class="modal-overlay" style="display: none;">
      <div class="modal-content">
        <div class="modal-header">
          <h3>ðŸŽ‰ Welcome to the Family!</h3>
          <button id="close-modal" class="close-button">&times;</button>
        </div>
        <div class="modal-body">
          <p>Thanks for subscribing! We've sent a confirmation email to verify your subscription.</p>
          <p>Keep an eye out for our latest stories and family adventures!</p>
        </div>
        <div class="modal-footer">
          <button id="modal-ok" class="modal-button">Got it!</button>
        </div>
      </div>
    </div>
  </BaseLayout>
</PostHogLayout>

<style>
@import url('https://fonts.googleapis.com/css2?family=Limelight&family=Playwrite+HU:wght@100..400&display=swap');

/* ConvertKit Form Overrides */
.newsletter-callout .formkit-form {
  box-sizing: border-box;
}

.newsletter-callout .formkit-form * {
  box-sizing: border-box;
}

.newsletter-callout .formkit-field {
  display: flex;
  flex: 1;
  min-width: 0;
}

/* Newsletter Callout - Integrated into home container */
.newsletter-callout {
  margin-top: 2em;
  padding: 1.5em;
  background: rgba(255, 255, 255, 0.7);
  border-radius: 12px;
  border: 2px solid rgba(84, 142, 155, 0.2);
  backdrop-filter: blur(10px);
}

.newsletter-intro {
  font-size: 1.1em !important;
  margin-bottom: 1em !important;
  color: #555;
  font-style: italic;
}

.newsletter-form-inline {
  width: 100%;
}

.newsletter-fields-inline {
  display: flex;
  gap: 0.8em;
  align-items: center;
  justify-content: center;
  flex-wrap: nowrap;
  max-width: 400px;
  margin: 0 auto;
}

.newsletter-input-inline {
  flex: 1;
  min-width: 0;
  width: auto;
  padding: 10px 14px;
  border: 2px solid #e0e0e0;
  border-radius: 8px;
  font-size: 14px;
  background: white;
  color: #333;
  transition: all 0.3s ease;
}

.newsletter-input-inline:focus {
  outline: none;
  border-color: var(--primary-color, #548e9b);
  box-shadow: 0 0 0 3px rgba(84, 142, 155, 0.1);
}

.newsletter-submit-inline {
  padding: 10px 20px;
  background: var(--primary-color, #548e9b);
  color: white;
  border: none;
  border-radius: 8px;
  font-size: 14px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  min-width: 90px;
  flex-shrink: 0;
}

.newsletter-submit-inline:hover {
  background: #4a7d88;
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(84, 142, 155, 0.3);
}

.newsletter-submit-inline:focus {
  outline: none;
}

.formkit-spinner {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: none;
}

.formkit-spinner div {
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background: white;
  animation: formkit-spinner 1.2s infinite ease-in-out;
  display: inline-block;
  margin: 0 1px;
}

.formkit-spinner div:nth-child(1) { animation-delay: -0.32s; }
.formkit-spinner div:nth-child(2) { animation-delay: -0.16s; }
.formkit-spinner div:nth-child(3) { animation-delay: 0s; }

@keyframes formkit-spinner {
  0%, 80%, 100% {
    opacity: 0;
    transform: scale(0);
  }
  40% {
    opacity: 1;
    transform: scale(1);
  }
}

.formkit-alert {
  list-style: none;
  padding: 0;
  margin: 0 0 0.8em 0;
  font-size: 0.85em;
  color: #d73527;
  background: rgba(215, 53, 39, 0.1);
  border: 1px solid rgba(215, 53, 39, 0.2);
  border-radius: 6px;
  padding: 0.5em 0.8em;
  display: none;
}

.formkit-alert li {
  margin: 0;
}

@media (max-width: 600px) {
  .newsletter-callout {
    margin-top: 1.5em;
    padding: 1.2em;
  }
  
  .newsletter-fields-inline {
    flex-direction: column;
    gap: 0.6em;
    max-width: none;
  }
  
  .newsletter-input-inline {
    min-width: auto;
    width: 100%;
  }
  
  .newsletter-submit-inline {
    width: 100%;
    min-width: auto;
    flex-shrink: 1;
  }
}

@media (max-width: 500px) {
  .newsletter-intro {
    font-size: 1em !important;
    text-align: center;
  }
}

/* Success Modal Styles */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  z-index: 1000;
  display: flex;
  align-items: center;
  justify-content: center;
  animation: fadeIn 0.3s ease;
}

.modal-content {
  background: white;
  border-radius: 16px;
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
  max-width: 500px;
  width: 90%;
  max-height: 80vh;
  overflow: auto;
  animation: slideIn 0.3s ease;
}

.modal-header {
  padding: 2em 2em 1em;
  border-bottom: 1px solid #eee;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.modal-header h3 {
  margin: 0;
  color: var(--primary-color, #548e9b);
  font-size: 1.5em;
}

.close-button {
  background: none;
  border: none;
  font-size: 2em;
  color: #999;
  cursor: pointer;
  padding: 0;
  width: 30px;
  height: 30px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: all 0.3s ease;
}

.close-button:hover {
  background: #f0f0f0;
  color: #333;
}

.modal-body {
  padding: 1em 2em;
}

.modal-body p {
  margin: 1em 0;
  line-height: 1.6;
  color: #555;
}

.modal-footer {
  padding: 1em 2em 2em;
  text-align: center;
}

.modal-button {
  background: var(--primary-color, #548e9b);
  color: white;
  border: none;
  padding: 12px 24px;
  border-radius: 8px;
  font-size: 16px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
}

.modal-button:hover {
  background: #4a7d88;
  transform: translateY(-1px);
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: scale(0.8) translateY(-20px);
  }
  to {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

@media (max-width: 600px) {
  .modal-content {
    width: 95%;
  }
  
  .modal-header,
  .modal-body,
  .modal-footer {
    padding-left: 1.5em;
    padding-right: 1.5em;
  }
}

.latest-section-wrapper {
  background: #f9f9f9;
  padding: 4em 2em;
  border-radius: 12px;
}

.section-title {
  font-family: "Playwrite HU", cursive;
  font-size: 2.2em;
  margin-bottom: 0.8em;
}

.post-list {
  list-style: none;
  padding: 0;
  margin: 2em 0;
  display: flex;
  flex-direction: column;
  gap: 2em;
}

.post-item {
  background: #fff;
  border-radius: 8px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
  padding: 1.5em;
  animation: fadeUp 0.6s ease forwards;
  opacity: 0;
  transform: translateY(20px);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  position: relative;
}

.post-item:hover,
.post-item:focus-within {
  transform: translateY(-5px) scale(1.02);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.12);
}

.post-item:hover::after {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: 8px;
  box-shadow: 0 0 15px rgba(123, 172, 245, 0.4);
  pointer-events: none;
}

@keyframes fadeUp {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.post-link {
  text-decoration: none;
  color: inherit;
}

.post-content h3 {
  margin: 0;
  font-family: var(--font-family-serif, serif);
  font-size: 1.5em;
  color: #333;
}

.post-description {
  margin: 0.6em 0;
  font-family: var(--font-family-sans, sans-serif);
  font-size: 1.1em;
  color: #555;
  line-height: 1.6;
}

.post-date {
  font-size: 0.9em;
  color: #777;
  margin-bottom: 0.5em;
}

.read-more a {
  font-weight: bold;
  color: var(--primary-color, #548e9b);
  text-decoration: none;
  box-shadow: none;
}

.read-more a:hover {
  text-decoration: underline;
}

.home-container {
  align-items: center;
  display: flex;
  flex: 1;
  justify-content: center;
  min-height: 400px;
  background-color: rgb(190, 214, 221, 0.5);
  padding: 2rem;
  margin: 2rem auto;
  border-radius: 16px;
  text-align: center;
}

.home-copy {
  flex: 1;
  padding: 0 1em;
}

.home-copy h1 {
  font-weight: 700;
  margin-bottom: 0.5em;
  line-height: 1.3;
}

.home-copy p {
  font-size: 1.4em;
}

.hero-image-container {
  margin: 0 1em;
  text-align: center;
}

.hero-image-container picture {
  display: block;
  min-height: 250px;
}

.caption {
  font-size: .8em;
  font-style: italic;
  text-align: left;
}

.hero-image {
  width: 100%;
  max-width: 550px;
  margin-bottom: 1em;
  border-radius: 12px;
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
}
.about-content {
  margin-top: 1.5em;
}

.about-content p {
  font-size: 1.1em;
  line-height: 1.6;
  margin-bottom: 1em;
}

@media (max-width: 1200px) {
  p {
    font-size: 1.2em;
  }
  .about-content p {
    font-size: 1em;
  }

  .hero-image {
    max-width: 400px;
  }
}

@media (max-width: 800px) {
  .home-container {
    flex-direction: column;
  }

  .home-copy {
    flex: 0;
    padding-bottom: 1em;
    text-align: center;
  }
  
  .about-content {
    max-width: 600px;
    margin: 0 auto;
  }
}
</style>

<script src="https://f.convertkit.com/ckjs/ck.5.js"></script>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const form = document.querySelector('.newsletter-form-inline') as HTMLFormElement;
  const modal = document.getElementById('success-modal');
  const closeButton = document.getElementById('close-modal');
  const okButton = document.getElementById('modal-ok');

  if (!form || !modal) return;

  // Function to show our success modal
  function showSuccessModal() {
    modal.style.display = 'flex';
    document.body.style.overflow = 'hidden';
    form.reset();
  }

  // Intercept form submission and handle manually
  form.addEventListener('submit', function(e) {
    e.preventDefault(); // Prevent normal form submission
    
    const email = (form.querySelector('input[name="email_address"]') as HTMLInputElement)?.value;
    if (!email) return;
    
    const submitButton = form.querySelector('[data-element="submit"]');
    const spinner = submitButton.querySelector('.formkit-spinner');
    const buttonText = submitButton.querySelector('span');
    
    // Show loading state
    if (spinner) (spinner as HTMLElement).style.display = 'block';
    if (buttonText) buttonText.style.opacity = '0';
    (submitButton as HTMLButtonElement).disabled = true;
    
    // Create form data
    const formData = new FormData();
    formData.append('email_address', email);
    
    // Submit to ConvertKit
    fetch('https://app.kit.com/forms/7612128/subscriptions', {
      method: 'POST',
      body: formData,
      mode: 'no-cors' // This allows the request but we can't read the response
    })
    .then(() => {
      // Since we can't read the response with no-cors, we assume success after a delay
      setTimeout(() => {
        showSuccessModal();
      }, 1500);
    })
    .catch((error) => {
      console.error('Error:', error);
      // Still show success modal since we can't really detect errors with no-cors
      setTimeout(() => {
        showSuccessModal();
      }, 1500);
    })
    .finally(() => {
      // Reset button state
      if (spinner) (spinner as HTMLElement).style.display = 'none';
      if (buttonText) buttonText.style.opacity = '1';
      (submitButton as HTMLButtonElement).disabled = false;
    });
  });

  // Close modal handlers
  function closeModal() {
    if (modal) {
      modal.style.display = 'none';
      document.body.style.overflow = 'auto';
    }
  }

  if (closeButton) {
    closeButton.addEventListener('click', closeModal);
  }

  if (okButton) {
    okButton.addEventListener('click', closeModal);
  }

  // Close modal when clicking overlay
  modal.addEventListener('click', function(e) {
    if (e.target === modal) {
      closeModal();
    }
  });

  // Close modal with Escape key
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape' && modal && modal.style.display === 'flex') {
      closeModal();
    }
  });
});
</script>
