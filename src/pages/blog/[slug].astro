---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Bio from '../../components/Bio.astro';
import { getCollection, getEntry, render } from 'astro:content';
import ShareButtons from '../../components/ShareButtons.astro';

export async function getStaticPaths() {
try {
    const blogEntries = await getCollection('blog');

    // Create routes using entry ID
    return blogEntries.map(post => {
      console.log(`Creating route for ${post.id}`);
      return {
        params: { slug: post.id },
        props: { entryId: post.id },  // Just pass the ID
      };
    });
  } catch (error) {
    console.error("Error in getStaticPaths:", error);
    return [];
  }
}

// Get blog post data from props
const { entryId } = Astro.props;
const entry = await getEntry('blog', entryId);

if (!entry) {
  return Astro.redirect('/404');
}

// Render the content
const { Content } = await render(entry);
const allAuthors = await getCollection('authors');
let author;
if (entry.data.author?.id) {
  try {
    author = await getEntry('authors', entry.data.author.id);
    if (author) {
      console.log(`Found author for ${entry.data.author.id}`);
    } else {
      console.error(`Author not found: ${entry.data.author.id}`);
    }
  } catch (error) {
    console.error(`Error fetching author: ${error.message}`);
  }
}

const permalink = `${Astro.site.href}blog/${entry.id}`;
---

<BaseLayout title={entry.data.title} description={entry.data.description} permalink={permalink} current="blog">
  <header>
    <p>{entry.data.publishDate} ~ {entry.data.readingTime}</p>
    <h1>{entry.data.title}</h1>
    <hr />
  </header>
  <div class="container">
    <article class="content">
      <Content />
    </article>
    <hr />
    
    {author && (
      <div class="author-bio">
        <h3>About the Author</h3>
        <Bio 
          name={author.data.name}
          bio={author.data.bio}
          avatar={author.data.avatar}
        />
      </div>
    )}
    
    <ShareButtons title={entry.data.title} permalink={permalink} />
  </div>
</BaseLayout>

<style>
  header {
    text-align: center;
  }

  header h1 {
    margin-bottom: 0.7em;
  }

  header p {
    color: var(--text-secondary);
    text-transform: uppercase;
    font-family: var(--font-family-sans);
    font-weight: 600;
  }

  header hr {
    min-width: 100px;
    width: 30%;
  }
    
  .author-bio {
    margin-top: 2rem;
    padding-top: 1rem;
  }
  
  .author-bio h3 {
    margin-bottom: 1rem;
    font-size: 1.4rem;
  }
</style>