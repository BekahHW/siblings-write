---
import PostHogLayout from '../../layouts/PostHogLayout.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';
import Bio from '../../components/Bio.astro';
import { getCollection, getEntry } from 'astro:content';

// Debugging: Log all authors retrieved
export async function getStaticPaths() {

  const authors = await getCollection('authors');

  return authors.map(author => {

    return {
      params: { author: author.id }, // Make sure author.id is a string
      props: { authorId: author.id },
    };
  });
}

// Retrieve the author entry
const { authorId } = Astro.props;

const authorEntry = await getEntry('authors', authorId); 
if (!authorEntry) {
  console.error(`Author ${authorId} not found!`);
  return Astro.redirect('/404');
}

// Fetch all blog posts
const allPosts = await getCollection('blog');

const authorPosts = allPosts
 .filter(post => post.data.author.id === authorEntry.id)
 .sort((a, b) => new Date(b.data.publishDate).valueOf() - new Date(a.data.publishDate).valueOf());

const permalink = `${Astro.site.href}authors/${authorEntry.id}`;
---

<PostHogLayout>
  <BaseLayout title={`Posts by ${authorEntry.data.name}`} description={`All posts by ${authorEntry.data.name}`} permalink={permalink}>
    <div class="container">
      <h1>Posts by {authorEntry.data.name}</h1>
      
      <div class="author-info">
        <Bio 
          name={authorEntry.data.name}
          bio={authorEntry.data.bio}
          avatar={authorEntry.data.avatar}
        />
      </div>

      <h2>Stories</h2>
      <ul>
        {authorPosts.length > 0 ? (
          authorPosts.map((post) => (
            <li>
              <a href={`/blog/${post.id}`}>
                {post.data.title}
              </a> - {post.data.publishDate}
            </li>
          ))
        ) : (
          <p>No posts found for this author.</p>
        )}
      </ul>
    </div>
  </BaseLayout>
</PostHogLayout>